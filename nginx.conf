worker_processes auto;

events {
	worker_connections 1024;
}

http {

	sendfile on;
	gzip on;
	gzip_vary on;
	gzip_min_length 1024;
	gzip_proxied expired no-cache no-store private auth;
	gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
	gzip_disable "MSIE [1-6]\.";
	server_tokens off;
	auth_basic "Admin Login"; # The message for the user requesting to login
    auth_basic_user_file /etc/nginx/pw_file; # Path to the password file

	limit_conn_zone $binary_remote_addr zone=addr:100m;

	add_header X-Frame-Options "SAMEORIGIN";
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; always";
	add_header X-Content-Type-Options "nosniff" always;
	add_header Referrer-Policy "origin-when-cross-origin" always;


	# redirect www -> non-www

	server {
		server_name www.pre.gaspardetjoseph.fr;
		return 301 $scheme://pre.gaspardetjoseph.fr$request_uri;
	}

	# redirect http -> https

	server {
		listen 80;
		server_name pre.gaspardetjoseph.fr;
		return 301 https://pre.gaspardetjoseph.fr$request_uri;
	}

	server {
    	listen 443 ssl;
		server_name www.pre.gaspardetjoseph.fr;
    	ssl_certificate /etc/nginx/certs/fullchain.pem;
		ssl_certificate_key /etc/nginx/certs/privkey.pem;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;
    	return 301 https://pre.gaspardetjoseph.fr$request_uri;
	}

	# read the ssl certificate / key when listening on https

	server {
		listen 443 ssl;
		server_name pre.gaspardetjoseph.fr;
		ssl_certificate /etc/nginx/certs/fullchain.pem;
		ssl_certificate_key /etc/nginx/certs/privkey.pem;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;

		location /api/ {
			auth_basic "off";
			limit_conn addr 5;
			proxy_pass http://backend/;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header content-type "application/json";
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
		}

		location / {
			limit_conn addr 5;
			proxy_pass http://frontend;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
			proxy_intercept_errors on;
			recursive_error_pages on;

			error_page 404 = @rewrite_proxy;
		}

		location @rewrite_proxy {
			rewrite ^/(.*)$ /index.html?$1 break;
			proxy_pass http://frontend;
			proxy_set_header Host $host;
		}
	}

	server {
		server_name www.admin.gaspardetjoseph.fr;
		return 301 $scheme://admin.gaspardetjoseph.fr$request_uri;
	}

	# redirect http -> https

	server {
		listen 80;
		server_name admin.gaspardetjoseph.fr;
		return 301 https://admin.gaspardetjoseph.fr$request_uri;
	}

	server {
    	listen 443 ssl;
		server_name www.admin.gaspardetjoseph.fr;
    	ssl_certificate /etc/nginx/certs/fullchain.pem;
		ssl_certificate_key /etc/nginx/certs/privkey.pem;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;
    	return 301 https://admin.gaspardetjoseph.fr$request_uri;
	}

	# read the ssl certificate / key when listening on https

	server {
		listen 443 ssl;
		server_name admin.gaspardetjoseph.fr;
		ssl_certificate /etc/nginx/certs/fullchain.pem;
		ssl_certificate_key /etc/nginx/certs/privkey.pem;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_prefer_server_ciphers on;

		location /api/ {
			auth_basic "off";
			limit_conn addr 5;
			proxy_pass http://backend/;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header content-type "application/json";
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
		}

		location / {
			limit_conn addr 5;
			proxy_pass http://admin;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
			proxy_intercept_errors on;
			recursive_error_pages on;

			error_page 404 = @rewrite_proxy;
		}

		location @rewrite_proxy {
			rewrite ^/(.*)$ /index.html?$1 break;
			proxy_pass http://admin;
			proxy_set_header Host $host;
		}
	}
}
